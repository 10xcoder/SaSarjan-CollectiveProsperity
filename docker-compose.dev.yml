# Docker Compose for SaSarjan App Store Local Development
# Created: 03-Jul-25
# Usage: docker-compose -f docker-compose.dev.yml up -d

version: '3.8'

services:
  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: sasarjan-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Bull dashboard for queue monitoring
  bull-board:
    image: deadly0/bull-board:latest
    container_name: sasarjan-bull-board
    ports:
      - "3001:3000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_USE_TLS=false
    depends_on:
      - redis

  # MinIO for local S3-compatible storage
  minio:
    image: minio/minio:latest
    container_name: sasarjan-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: sasarjan-mailhog
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    environment:
      - MH_STORAGE=memory
      - MH_SMTP_BIND_ADDR=0.0.0.0:1025

  # PostgreSQL (only if not using Supabase local)
  # Uncomment if you need a standalone PostgreSQL instance
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: sasarjan-postgres
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=sasarjan_appstore
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5

  # Adminer for database management (optional)
  adminer:
    image: adminer:latest
    container_name: sasarjan-adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=host.docker.internal
      - ADMINER_DESIGN=pepa-linha

  # pgAdmin for PostgreSQL management (optional)
  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   container_name: sasarjan-pgadmin
  #   ports:
  #     - "5050:80"
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=admin@sasarjan.com
  #     - PGADMIN_DEFAULT_PASSWORD=admin
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin

volumes:
  redis-data:
    driver: local
  minio-data:
    driver: local
  # postgres-data:
  #   driver: local
  # pgadmin-data:
  #   driver: local

networks:
  default:
    name: sasarjan-network
    driver: bridge